D1 <- D1 + rowSums(flux.df[,1:10])*tstep          # detritus D1
D2 <- D2 + rowSums(flux.df[,11:20])*tstep         # detritus D2
DOC <- DOC + rowSums(flux.df[,21:30])*tstep       # DOC
Batt <- Batt + rowSums(flux.df[,31:40])*tstep     # attached prokaryotes
Bf <- Bf + rowSums(flux.df[,41:50])*tstep         # free-living prokaryotes
Vatt <- Vatt + rowSums(flux.df[,51:60])*tstep     # attached prokaryote consumers
Vf <- Vf + rowSums(flux.df[,61:70])*tstep         # free-living prokaryote consumers
H <- H + rowSums(flux.df[,71:80])*tstep           # detritivores
Z[,1] <- Z[,1] + rowSums(flux.df[,81:90])*tstep     # Z1
Z[,2] <- Z[,2] + rowSums(flux.df[,91:100])*tstep    # Z2
Z[,3] <- Z[,3] + rowSums(flux.df[,101:110])*tstep   # Z3
Z[,4] <- Z[,4] + rowSums(flux.df[,111:120])*tstep   # Z4
Z[,5] <- Z[,5] + rowSums(flux.df[,121:130])*tstep   # Z5
Z[,6] <- Z[,6] + rowSums(flux.df[,131:140])*tstep   # Z6
Batt2 <- Batt2 + rowSums(flux.df[,141:150])*tstep # attached prokaryotes: D2
Vatt2 <- Vatt2 + rowSums(flux.df[,151:160])*tstep # attached prokaryote consumers: D2
}  # time loop
# respiration
RZ <- flux[,2,8]+flux[,2,9]+flux[,2,10]+flux[,2,11]+flux[,2,12]+flux[,2,13]+flux[,2,14]  # detritivores and carnivores
RB <- flux[,2,4]+flux[,2,5]+flux[,2,15]      # attached and free-living prokaryotes
}  # time loop 1-10
# Inputs of C to mesopelagic zone
n <- flux[,1,1]+flux[,1,3]+flux[,2,3]                # total C input (POC plus DOC)
# Respiration
ZR <- -(flux[,2,9]+flux[,2,10]+flux[,2,11]+flux[,2,12]+flux[,2,13]+flux[,2,14])   # carnivores
BattR <- -flux[,2,4]-flux[,2,15]
VattR <- -flux[,2,6]-flux[,6,6]-flux[,2,16]-flux[,6,16]  #4 attached prokaryote consumers (includes closure respiration)
# Carbon demand
ZCD <-flux[,1,9]+flux[,1,10]+flux[,1,11]+flux[,1,12]+flux[,1,13]+flux[,1,14]      # carnivores
BattCD <- flux[,1,4]+flux[,1,15]
VattCD <- flux[,1,6]+flux[,1,16]
# Production:
Prod_Bfl <- DOCuptakeBfl*w_fl                     # free-living prokaryotes
Prod_Batt <- (D1toBatt+D2toBatt2)*w_att            # attached prokaryotes
Prod_Vfl <- Vflgrazing*(1.0-vfl_DOC)*vfl_beta*vfl_npe      # free-living prokaryote consumers
Prod_Vatt <- (Vattgrazing+Vatt2grazing)*(1.0-vatt_DOC)*vatt_beta*vatt_npe # attached prokaryote consumers
Prod_H <- Hgrazing*(1.0-h_DOC-h_D2)*h_beta*h_npe  # detritivores
Prod_Z <- Zgrazing*(1.0-z_DOC-z_D2)*z_beta*z_npe  # carnivores
# D1 sources
ex_actD1 <- 0
# D2 sources
ex_actD2 <- 0
# DOC sources: ex,act,sol,Vfl,Vatt,H,Z
DOC_sol <- flux[,3,3]+flux[,4,3]
#closure respi
closure = -(flux[,6,6]+flux[,6,16])
D1_Batt <- -flux[,2,1]-flux[,3,1]
D2_Batt <- -flux[,1,2]-flux[,2,2]
#########################SORTIE POUR ANALYSE ABC :
Respi_attached = -flux[,2,4]-flux[,2,15]
Respi_zooplancton = (-flux[,2,7]) + (-flux[,2,6]-flux[,6,6]-flux[,2,16]-flux[,6,16]) + (-flux[,2,8]) + (-(flux[,2,9]+flux[,2,10]+flux[,2,11]+flux[,2,12]+flux[,2,13]+flux[,2,14]))
Production_Free_living = Prod_Bfl
Production_attached = Prod_Batt
Production_NonSinking =  Prod_Bfl + (D2toBatt2 * w_fl ) #production free living + production bacteries attachÃÂ©es aux particules suspendues
Production_Sinking = D1toBatt*w_att   #production bacterie attachÃÂ©es aux particules qui chutent (peu importe la vitesse)
Respiration_Sinking  = -flux[,2,4]
Respiration_zoo = Respi_zooplancton
res <- c( Production_NonSinking, Production_Sinking, Respiration_Sinking, Respiration_zoo)
res <- matrix(data = res, n_bootstrap, 4)
if (!is.null(flux_out_nb)){
return(res[,flux_out_nb])
}
else{
return(res)
}
}
x <- sobolshap_knn(model = anderson, X = X, U = 1,
method = "rank", flux_out_nb = flow)
flow
flow = 1
x <- sobolshap_knn(model = anderson, X = X, U = 1,
method = "rank", flux_out_nb = flow)
x
setwd("C:/Users/rfuchs/Documents/GitHub/CarbonPump/sobol")
source('model.R')
source('model_seq.R')
#install.packages("TSP", dependencies = TRUE)
#install.packages('RANN')
#install.packages('sensitivity')
library(sensitivity)
library(ggplot2)
library(latex2exp)
anderson_labels = c("psi", 'omega_a', 'omega_FL', 'alpha', 'phi_v',
'beta_v', 'K_v', 'phi_v', 'beta_v', 'K_v',
'phi_z', 'beta_z', 'lambda_z', 'K_z', 'phi_h',
'beta_H', 'lambda_h', 'K_h', 'zeta', 'zi2')
TeX(anderson_labels[1])
#==================================================
# Sobol knn
#==================================================
N <- 500
k <- 22
X <- data.frame(matrix(runif(k * N), nrow = N))
X
runif(k * N)
X2 = data.frame(matrix(runif(k2 * N), nrow = N))
k2 <- 2 # The 2 CFs
X2 = data.frame(matrix(runif(k2 * N), nrow = N))
X2
runif
X2 = data.frame(matrix(runif(k2 * N, min = 0, max = 6) , nrow = N))
X2
concat(X, X2)
append(X, X2)
dim(append(X, X2))
rbind(X, X2)
cbind(X, X2)
X = cbind(X, X2)
dim(X)
N <- 500
k <- 20 # without the CFs
X <- data.frame(matrix(runif(k * N), nrow = N))
k2 <- 2 # The 2 CFs
X2 = data.frame(matrix(runif(k2 * N, min = 0, max = 6) , nrow = N))
X = cbind(X, X2)
X
dim(X)
setwd("C:/Users/rfuchs/Documents/GitHub/CarbonPump/sobol")
source('model.R')
source('model_seq.R')
#install.packages("TSP", dependencies = TRUE)
#install.packages('RANN')
#install.packages('sensitivity')
library(sensitivity)
library(ggplot2)
library(latex2exp)
anderson_labels = c("psi", 'omega_a', 'omega_FL', 'alpha', 'phi_v',
'beta_v', 'K_v', 'phi_v', 'beta_v', 'K_v',
'phi_z', 'beta_z', 'lambda_z', 'K_z', 'phi_h',
'beta_H', 'lambda_h', 'K_h', 'zeta', 'zi2')
TeX(anderson_labels[1])
#==================================================
# Sobol knn
#==================================================
N <- 500
k <- 20 # without the CFs
X <- data.frame(matrix(runif(k * N), nrow = N))
k2 <- 2 # The 2 CFs
X2 = data.frame(matrix(runif(k2 * N, min = 0, max = 6) , nrow = N))
X = cbind(X, X2)
stats_labels = c('Production_NonSinking', 'Production_Sinking', 'Respiration_Sinking', 'Respiration_zoo')
order.one.indices = data.frame(matrix(0, length(stats_labels), k + k2))
colnames(order.one.indices) <- anderson_labels
total.indices = matrix(0, 4, 20)
colnames(total.indices) <- anderson_labels
total.indices = matrix(0, length(stats_labels), k + k2)
colnames(total.indices) <- anderson_labels
anderson_labels
TeX(anderson_labels[1])
setwd("C:/Users/rfuchs/Documents/GitHub/CarbonPump/sobol")
source('model.R')
source('model_seq.R')
#install.packages("TSP", dependencies = TRUE)
#install.packages('RANN')
#install.packages('sensitivity')
library(sensitivity)
library(ggplot2)
library(latex2exp)
anderson_labels = c("psi", 'omega_a', 'omega_FL', 'alpha', 'phi_v',
'beta_v', 'K_v', 'phi_v', 'beta_v', 'K_v',
'phi_z', 'beta_z', 'lambda_z', 'K_z', 'phi_h',
'beta_H', 'lambda_h', 'K_h', 'zeta', 'zi2', 'CF_att', 'CF_fl')
TeX(anderson_labels[1])
N <- 500
k <- 20 # without the CFs
X <- data.frame(matrix(runif(k * N), nrow = N))
k2 <- 2 # The 2 CFs
X2 = data.frame(matrix(runif(k2 * N, min = 0, max = 6) , nrow = N))
X = cbind(X, X2)
stats_labels = c('Production_NonSinking', 'Production_Sinking', 'Respiration_Sinking', 'Respiration_zoo')
order.one.indices = data.frame(matrix(0, length(stats_labels), k + k2))
colnames(order.one.indices) <- anderson_labels
total.indices = matrix(0, length(stats_labels), k + k2)
colnames(total.indices) <- anderson_labels
total.indices
flow
cat('flow number', flow, '\n')
start = Sys.time()
x <- sobolshap_knn(model = anderson, X = X, U = 1,
method = "rank", flux_out_nb = flow)
colnames(x$S) <- anderson_labels
print(ggplot(x)  + ggtitle(paste('1st order Sobol indices:', stats_labels[flow])))
colnames
x$S
print(ggplot(x)  + ggtitle(paste('1st order Sobol indices:', stats_labels[flow])))
order.one.indices[flow,] = x$S
x2 <- sobolshap_knn(model = NULL, X = X, U = 0, method = "knn", n.knn = 5)
tot.indices = tell(x2,x$y)
colnames(x2$S) <- anderson_labels
total.indices[flow,] = x2$S
print(ggplot(x2)  + ggtitle(paste('Total Sobol indices:', stats_labels[flow])))
end = Sys.time()
print(end-start)
#############
#* Sensitivity
#############
setwd("C:/Users/rfuchs/Documents/GitHub/CarbonPump/sobol")
source('model.R')
source('model_seq.R')
#install.packages("TSP", dependencies = TRUE)
#install.packages('RANN')
#install.packages('sensitivity')
library(sensitivity)
library(ggplot2)
library(latex2exp)
anderson_labels = c("psi", 'omega_a', 'omega_FL', 'alpha', 'phi_v',
'beta_v', 'K_v', 'phi_v', 'beta_v', 'K_v',
'phi_z', 'beta_z', 'lambda_z', 'K_z', 'phi_h',
'beta_H', 'lambda_h', 'K_h', 'zeta', 'zi2', 'CF_att', 'CF_fl')
TeX(anderson_labels[1])
#==================================================
# Sobol knn
#==================================================
N <- 500
k <- 20 # without the CFs
X <- data.frame(matrix(runif(k * N), nrow = N))
k2 <- 2 # The 2 CFs
X2 = data.frame(matrix(runif(k2 * N, min = 0, max = 6) , nrow = N))
X = cbind(X, X2)
stats_labels = c('Production_NonSinking', 'Production_Sinking', 'Respiration_Sinking', 'Respiration_zoo')
order.one.indices = data.frame(matrix(0, length(stats_labels), k + k2))
colnames(order.one.indices) <- anderson_labels
total.indices = matrix(0, length(stats_labels), k + k2)
colnames(total.indices) <- anderson_labels
for (flow in 1:4){
cat('flow number', flow, '\n')
start = Sys.time()
x <- sobolshap_knn(model = anderson, X = X, U = 1,
method = "rank", flux_out_nb = flow)
colnames(x$S) <- anderson_labels
print(ggplot(x)  + ggtitle(paste('1st order Sobol indices:', stats_labels[flow])))
order.one.indices[flow,] = x$S
x2 <- sobolshap_knn(model = NULL, X = X, U = 0, method = "knn", n.knn = 5)
tot.indices = tell(x2,x$y)
colnames(x2$S) <- anderson_labels
total.indices[flow,] = x2$S
print(ggplot(x2)  + ggtitle(paste('Total Sobol indices:', stats_labels[flow])))
end = Sys.time()
print(end-start)
}
write.csv(order.one.indices, '1st_order_Sobol.csv')
write.csv(total.indices, 'total_Sobol.csv')
for (flow in 1:4){
x$S = order.one.indices[flow,]
print(ggplot(x)  + ggtitle(paste('First order Sobol indices:', stats_labels[flow])))
}
for (flow in 1:4){
plot(total.indices[flow,], main = paste('Total Sobol indices:', stats_labels[flow]),
ylab = 'Total Sobol indices')
axis(1, at=1:20, labels = anderson_labels)
}
setwd("C:/Users/rfuchs/Documents/GitHub/CarbonPump/sobol")
source('model.R')
source('model_seq.R')
#install.packages("TSP", dependencies = TRUE)
#install.packages('RANN')
#install.packages('sensitivity')
library(sensitivity)
library(ggplot2)
library(latex2exp)
anderson_labels = c("psi", 'omega_a', 'omega_FL', 'alpha', 'phi_v',
'beta_v', 'K_v', 'phi_v', 'beta_v', 'K_v',
'phi_z', 'beta_z', 'lambda_z', 'K_z', 'phi_h',
'beta_H', 'lambda_h', 'K_h', 'zeta', 'zi2', 'CF_att', 'CF_fl')
TeX(anderson_labels[1])
#==================================================
# Sobol knn
#==================================================
N <- 500
k <- 20 # without the CFs
X <- data.frame(matrix(runif(k * N), nrow = N))
k2 <- 2 # The 2 CFs
X2 = data.frame(matrix(runif(k2 * N, min = 0, max = 6) , nrow = N))
X = cbind(X, X2)
stats_labels = c('Production_NonSinking', 'Production_Sinking', 'Respiration_Sinking', 'Respiration_zoo')
order.one.indices = data.frame(matrix(0, length(stats_labels), k + k2))
colnames(order.one.indices) <- anderson_labels
total.indices = matrix(0, length(stats_labels), k + k2)
colnames(total.indices) <- anderson_labels
for (flow in 1:4){
cat('flow number', flow, '\n')
start = Sys.time()
x <- sobolshap_knn(model = anderson, X = X, U = 1,
method = "rank", flux_out_nb = flow)
colnames(x$S) <- anderson_labels
print(ggplot(x)  + ggtitle(paste('1st order Sobol indices:', stats_labels[flow])))
order.one.indices[flow,] = x$S
x2 <- sobolshap_knn(model = NULL, X = X, U = 0, method = "knn", n.knn = 5)
tot.indices = tell(x2,x$y)
colnames(x2$S) <- anderson_labels
total.indices[flow,] = x2$S
print(ggplot(x2)  + ggtitle(paste('Total Sobol indices:', stats_labels[flow])))
end = Sys.time()
print(end-start)
}
write.csv(order.one.indices, '1st_order_Sobol.csv')
write.csv(total.indices, 'total_Sobol.csv')
for (flow in 1:4){
x$S = order.one.indices[flow,]
print(ggplot(x)  + ggtitle(paste('First order Sobol indices:', stats_labels[flow])))
}
for (flow in 1:4){
plot(total.indices[flow,], main = paste('Total Sobol indices:', stats_labels[flow]),
ylab = 'Total Sobol indices')
axis(1, at=1:(k + k2), labels = anderson_labels)
}
#===========================================
# Legacy code
#===========================================
# Start with the first order indices
start = Sys.time()
x <- sobolshap_knn(model = anderson, X = X, U = 1,
method = "rank", flux_out_nb = 1)
end = Sys.time()
print(end-start)
# 2000 particles = 9s, 5000pts = 22s, 10000pts = 1,6mins, 20 000pts = 4,6mins, 40 000 pts = 43mins
# 50 000 pts 66 minutes
colnames(x$S) <- anderson_labels
ggplot(x)
xx <- as.data.frame(t(as.data.frame(x$S)))
plot <- ggplot(xx, aes(anderson_labels))
# Then the total indices
x2 <- sobolshap_knn(model = NULL, X = X, U = 0, method = "knn", n.knn = 5)
tot.indices = tell(x2,x$y)
ggplot(x2)  + scale_x_discrete(labels = c('X1' = anderson_labels[1]))
#############
setwd("C:/Users/rfuchs/Documents/GitHub/CarbonPump/sobol")
source('model.R')
source('model_seq.R')
#install.packages("TSP", dependencies = TRUE)
#install.packages('RANN')
#install.packages('sensitivity')
library(sensitivity)
library(ggplot2)
library(latex2exp)
anderson_labels = c("psi", 'omega_a', 'omega_FL', 'alpha', 'phi_v',
'beta_v', 'K_v', 'phi_v', 'beta_v', 'K_v',
'phi_z', 'beta_z', 'lambda_z', 'K_z', 'phi_h',
'beta_H', 'lambda_h', 'K_h', 'zeta', 'zi2', 'CF_att', 'CF_fl')
TeX(anderson_labels[1])
#==================================================
# Sobol knn
#==================================================
N <- 500
k <- 20 # without the CFs
X <- data.frame(matrix(runif(k * N), nrow = N))
k2 <- 2 # The 2 CFs
X2 = data.frame(matrix(runif(k2 * N, min = 0, max = 6) , nrow = N))
X = cbind(X, X2)
stats_labels = c('Production_NonSinking', 'Production_Sinking', 'Respiration_Sinking', 'Respiration_zoo')
order.one.indices = data.frame(matrix(0, length(stats_labels), k + k2))
colnames(order.one.indices) <- anderson_labels
total.indices = matrix(0, length(stats_labels), k + k2)
colnames(total.indices) <- anderson_labels
for (flow in 1:4){
cat('flow number', flow, '\n')
start = Sys.time()
x <- sobolshap_knn(model = anderson, X = X, U = 1,
method = "rank", flux_out_nb = flow)
colnames(x$S) <- anderson_labels
print(ggplot(x)  + ggtitle(paste('1st order Sobol indices:', stats_labels[flow])))
order.one.indices[flow,] = x$S
x2 <- sobolshap_knn(model = NULL, X = X, U = 0, method = "knn", n.knn = 5)
tot.indices = tell(x2,x$y)
colnames(x2$S) <- anderson_labels
total.indices[flow,] = x2$S
print(ggplot(x2)  + ggtitle(paste('Total Sobol indices:', stats_labels[flow])))
end = Sys.time()
print(end-start)
}
write.csv(order.one.indices, '1st_order_Sobol.csv')
write.csv(total.indices, 'total_Sobol.csv')
for (flow in 1:4){
x$S = order.one.indices[flow,]
print(ggplot(x)  + ggtitle(paste('First order Sobol indices:', stats_labels[flow])))
}
for (flow in 1:4){
plot(total.indices[flow,], main = paste('Total Sobol indices:', stats_labels[flow]),
ylab = 'Total Sobol indices')
axis(1, at=1:(k + k2), labels = anderson_labels)
}
N <- 3000
k <- 20 # without the CFs
X <- data.frame(matrix(runif(k * N), nrow = N))
k2 <- 2 # The 2 CFs
X2 = data.frame(matrix(runif(k2 * N, min = 0, max = 6) , nrow = N))
X = cbind(X, X2)
stats_labels = c('Production_NonSinking', 'Production_Sinking', 'Respiration_Sinking', 'Respiration_zoo')
order.one.indices = data.frame(matrix(0, length(stats_labels), k + k2))
colnames(order.one.indices) <- anderson_labels
total.indices = matrix(0, length(stats_labels), k + k2)
colnames(total.indices) <- anderson_labels
for (flow in 1:4){
cat('flow number', flow, '\n')
start = Sys.time()
x <- sobolshap_knn(model = anderson, X = X, U = 1,
method = "rank", flux_out_nb = flow)
colnames(x$S) <- anderson_labels
print(ggplot(x)  + ggtitle(paste('1st order Sobol indices:', stats_labels[flow])))
order.one.indices[flow,] = x$S
x2 <- sobolshap_knn(model = NULL, X = X, U = 0, method = "knn", n.knn = 5)
tot.indices = tell(x2,x$y)
colnames(x2$S) <- anderson_labels
total.indices[flow,] = x2$S
print(ggplot(x2)  + ggtitle(paste('Total Sobol indices:', stats_labels[flow])))
end = Sys.time()
print(end-start)
}
write.csv(order.one.indices, '1st_order_Sobol.csv')
write.csv(total.indices, 'total_Sobol.csv')
for (flow in 1:4){
x$S = order.one.indices[flow,]
print(ggplot(x)  + ggtitle(paste('First order Sobol indices:', stats_labels[flow])))
}
for (flow in 1:4){
plot(total.indices[flow,], main = paste('Total Sobol indices:', stats_labels[flow]),
ylab = 'Total Sobol indices')
axis(1, at=1:(k + k2), labels = anderson_labels)
}
N <- 3000
k <- 20 # without the CFs
X <- data.frame(matrix(runif(k * N), nrow = N))
k2 <- 2 # The 2 CFs
X2 = data.frame(matrix(runif(k2 * N, min = 0, max = 6) , nrow = N))
X = cbind(X, X2)
stats_labels = c('Production_NonSinking', 'Production_Sinking', 'Respiration_Sinking', 'Respiration_zoo')
order.one.indices = data.frame(matrix(0, length(stats_labels), k + k2))
colnames(order.one.indices) <- anderson_labels
total.indices = matrix(0, length(stats_labels), k + k2)
colnames(total.indices) <- anderson_labels
for (flow in 1:4){
cat('flow number', flow, '\n')
start = Sys.time()
x <- sobolshap_knn(model = anderson, X = X, U = 1,
method = "rank", flux_out_nb = flow)
colnames(x$S) <- anderson_labels
print(ggplot(x)  + ggtitle(paste('1st order Sobol indices:', stats_labels[flow])))
order.one.indices[flow,] = x$S
x2 <- sobolshap_knn(model = NULL, X = X, U = 0, method = "knn", n.knn = 5)
tot.indices = tell(x2,x$y)
colnames(x2$S) <- anderson_labels
total.indices[flow,] = x2$S
print(ggplot(x2)  + ggtitle(paste('Total Sobol indices:', stats_labels[flow])))
end = Sys.time()
print(end-start)
}
write.csv(order.one.indices, '1st_order_Sobol.csv')
write.csv(total.indices, 'total_Sobol.csv')
for (flow in 1:4){
x$S = order.one.indices[flow,]
print(ggplot(x)  + ggtitle(paste('First order Sobol indices:', stats_labels[flow])))
}
for (flow in 1:4){
plot(total.indices[flow,], main = paste('Total Sobol indices:', stats_labels[flow]),
ylab = 'Total Sobol indices')
axis(1, at=1:(k + k2), labels = anderson_labels)
}
setwd("C:/Users/rfuchs/Documents/GitHub/CarbonPump/sobol")
source('model.R')
source('model_seq.R')
#install.packages("TSP", dependencies = TRUE)
#install.packages('RANN')
#install.packages('sensitivity')
library(sensitivity)
library(ggplot2)
library(latex2exp)
anderson_labels = c("psi", 'omega_a', 'omega_FL', 'alpha', 'phi_v',
'beta_v', 'K_v', 'phi_v', 'beta_v', 'K_v',
'phi_z', 'beta_z', 'lambda_z', 'K_z', 'phi_h',
'beta_H', 'lambda_h', 'K_h', 'zeta', 'zi2', 'CF_att', 'CF_fl')
TeX(anderson_labels[1])
#==================================================
# Sobol knn
#==================================================
N <- 20000
k <- 20 # without the CFs
X <- data.frame(matrix(runif(k * N), nrow = N))
k2 <- 2 # The 2 CFs
X2 = data.frame(matrix(runif(k2 * N, min = 0, max = 6) , nrow = N))
X = cbind(X, X2)
stats_labels = c('Production_NonSinking', 'Production_Sinking', 'Respiration_Sinking', 'Respiration_zoo')
order.one.indices = data.frame(matrix(0, length(stats_labels), k + k2))
colnames(order.one.indices) <- anderson_labels
total.indices = matrix(0, length(stats_labels), k + k2)
colnames(total.indices) <- anderson_labels
for (flow in 1:4){
cat('flow number', flow, '\n')
start = Sys.time()
x <- sobolshap_knn(model = anderson, X = X, U = 1,
method = "rank", flux_out_nb = flow)
colnames(x$S) <- anderson_labels
print(ggplot(x)  + ggtitle(paste('1st order Sobol indices:', stats_labels[flow])))
order.one.indices[flow,] = x$S
x2 <- sobolshap_knn(model = NULL, X = X, U = 0, method = "knn", n.knn = 5)
tot.indices = tell(x2,x$y)
colnames(x2$S) <- anderson_labels
total.indices[flow,] = x2$S
print(ggplot(x2)  + ggtitle(paste('Total Sobol indices:', stats_labels[flow])))
end = Sys.time()
print(end-start)
}
write.csv(order.one.indices, '1st_order_Sobol.csv')
write.csv(total.indices, 'total_Sobol.csv')
for (flow in 1:4){
x$S = order.one.indices[flow,]
print(ggplot(x)  + ggtitle(paste('First order Sobol indices:', stats_labels[flow])))
}
for (flow in 1:4){
plot(total.indices[flow,], main = paste('Total Sobol indices:', stats_labels[flow]),
ylab = 'Total Sobol indices')
axis(1, at=1:(k + k2), labels = anderson_labels)
}
